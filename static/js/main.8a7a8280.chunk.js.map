{"version":3,"sources":["components.js/Header.js","components.js/Loader.js","convertFunctions/convert.js","components.js/CurrentWeather.js","components.js/SearchWeather.js","components.js/HourlyWeatherItem.js","components.js/HourlyWeather.js","components.js/App.js","index.js"],"names":["Header","className","style","backgroundColor","fontSize","color","Loader","height","width","role","convertToCelcius","kelvin","convertToFahrenheit","createFahrenheitTemps","mainObject","newObject","temp","temp_min","temp_max","Object","keys","forEach","key","value","createCelciusTemps","CurrentWeather","state","onClickProperties","celcius","fahrenheit","convertedTemps","showedTemp","onCelciusClick","setState","props","data","main","changeShowedTemp","onFahrenheitClick","this","prevProps","newTemp","name","weather","wind","sys","Math","floor","cursor","onClick","description","marginTop","src","icon","alt","country","humidity","speed","Component","SearchWeather","cityName","onFormSubmit","event","preventDefault","onSearchSubmit","onSubmit","type","placeholder","onChange","target","boxShadow","HourlyWeatherItem","tempCondition","dt","date","Date","day","getDay","hour","getHours","afterHour","HourlyWeather","weatherItems","items","filter","item","idx","map","App","fetchCurrentWeather","a","async","params","coords","latitude","longitude","axios","get","response","currentWeatherData","alert","cityname","forecastUrl","forecast","hourlyWeatherList","list","fetchHourlyforecast","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.8a7a8280.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"py-3\" style={{ backgroundColor: \"#5f98d5\" }}>\r\n        <div className=\"container d-flex justify-content-center\">\r\n          <div>\r\n            <h1 className=\"text-capitalize text-light\">\r\n              <i\r\n                className=\"fas fa-sun text-yellow mr-3\"\r\n                style={{ fontSize: \"2.5rem\", color: \"yellow\" }}\r\n              />\r\n              weather forecast\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <div\r\n        className=\"spinner-border\"\r\n        style={{ width: \"3rem\", height: \"3rem\" }}\r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n      <div\r\n        className=\"spinner-grow\"\r\n        style={{ width: \"3rem\", height: \"3rem\" }}\r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n      <div>Loading...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","// converting kelvin to celcius\r\n\r\nexport const convertToCelcius = kelvin => kelvin - 273.15;\r\n\r\n// converting kelvin to fahrenheit\r\n\r\nexport const convertToFahrenheit = kelvin => ((kelvin - 273.15) * 9) / 5 + 32;\r\n\r\n// creating an object of all new converted temperatures in fahrenheit\r\n\r\nexport const createFahrenheitTemps = mainObject => {\r\n  const { temp, temp_min, temp_max } = mainObject;\r\n  const newObject = { temp, temp_min, temp_max };\r\n  Object.keys(newObject).forEach(key => {\r\n    const value = newObject[key];\r\n    newObject[key] = convertToFahrenheit(value);\r\n  });\r\n\r\n  return newObject;\r\n};\r\n\r\n// creating an object of all new converted temperatures in celcius\r\n\r\nexport const createCelciusTemps = mainObject => {\r\n  const { temp, temp_min, temp_max } = mainObject;\r\n  const newObject = { temp, temp_min, temp_max };\r\n  Object.keys(newObject).forEach(key => {\r\n    const value = newObject[key];\r\n    newObject[key] = convertToCelcius(value);\r\n  });\r\n\r\n  return newObject;\r\n};\r\n\r\n// converting Unix timestamp to hours and minustes\r\n\r\nexport const convertToTime = (unixTime = null) => {\r\n  const date = new Date(unixTime * 1000);\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const midday = hours >= 12 ? \"PM\" : \"AM\";\r\n  return `${hours} : ${minutes} ${midday}`;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  // convertToTime,\r\n  createFahrenheitTemps,\r\n  createCelciusTemps\r\n} from \"../convertFunctions/convert\";\r\n\r\nclass CurrentWeather extends Component {\r\n  state = {\r\n    onClickProperties: {\r\n      celcius: { color: \"text-secondary\" },\r\n      fahrenheit: { color: \"text-light\" }\r\n    },\r\n    convertedTemps: { temp: null, temp_min: null, temp_max: null },\r\n    showedTemp: \"fahrenheit\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { main } = this.props.data;\r\n    this.setState({\r\n      convertedTemps: createFahrenheitTemps(main)\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const newTemp = this.props.data.main.temp;\r\n    const prevTemp = prevProps.data.main.temp;\r\n    if (prevTemp !== newTemp) {\r\n      const { main } = this.props.data;\r\n      this.setState({\r\n        onClickProperties: {\r\n          celcius: { color: \"text-secondary\" },\r\n          fahrenheit: { color: \"text-light\" }\r\n        },\r\n        convertedTemps: createFahrenheitTemps(main)\r\n      });\r\n    }\r\n  }\r\n\r\n  // fucntion for Celcius span when it is clicked\r\n\r\n  onCelciusClick = () => {\r\n    this.setState({\r\n      onClickProperties: {\r\n        celcius: { color: \"text-light\" },\r\n        fahrenheit: { color: \"text-secondary\" }\r\n      },\r\n      convertedTemps: createCelciusTemps(this.props.data.main)\r\n    });\r\n    this.props.changeShowedTemp(\"celcius\");\r\n  };\r\n\r\n  // fucntion for Fahrenheit span when it is clicked\r\n\r\n  onFahrenheitClick = () => {\r\n    this.setState({\r\n      onClickProperties: {\r\n        celcius: { color: \"text-secondary\" },\r\n        fahrenheit: { color: \"text-light\" }\r\n      },\r\n      convertedTemps: createFahrenheitTemps(this.props.data.main),\r\n      showedTemp: \"fahrenheit\"\r\n    });\r\n    this.props.changeShowedTemp(\"fahrenheit\");\r\n  };\r\n\r\n  render() {\r\n    const { main, name, weather, wind, sys } = this.props.data;\r\n    return (\r\n      <div className=\"p-3\">\r\n        <div className=\"d-flex\">\r\n          <div className=\"col-5 p-1\">\r\n            <div className=\"d-flex\">\r\n              <h3 className=\"text-light text-capitalize d-inline-block\">\r\n                feels like {Math.floor(this.state.convertedTemps.temp)}\r\n              </h3>\r\n              <div className=\"ml-2\">\r\n                <span\r\n                  className={`mr-1 ${this.state.onClickProperties.celcius.color}`}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.onCelciusClick}\r\n                >\r\n                  °C\r\n                </span>\r\n                <span className=\"mr-1 text-light\">|</span>\r\n                <span\r\n                  className={this.state.onClickProperties.fahrenheit.color}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.onFahrenheitClick}\r\n                >\r\n                  °F\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"d-flex\">\r\n                <span\r\n                  className=\"text-light text-capitalize d-inline-block col-6 p-0\"\r\n                  style={{ fontSize: \"1.2rem\" }}\r\n                >\r\n                  min {Math.floor(this.state.convertedTemps.temp_min)}\r\n                  <i\r\n                    className=\"fas fa-arrow-down text-light ml-2\"\r\n                    style={{ fontSize: \"1.2rem\" }}\r\n                  />\r\n                </span>\r\n                <span\r\n                  className=\"text-light text-capitalize d-inline-block col-6 p-0\"\r\n                  style={{ fontSize: \"1.2rem\" }}\r\n                >\r\n                  max {Math.floor(this.state.convertedTemps.temp_max)}\r\n                  <i\r\n                    className=\"fas fa-arrow-up text-light ml-2\"\r\n                    style={{ fontSize: \"1.2rem\" }}\r\n                  />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 p-1 d-flex flex-column justify-content-start\">\r\n            <div className=\"d-flex align-items-start justify-content-start\">\r\n              <h3 className=\"text-light text-capitalize\">\r\n                {weather[0].description}\r\n              </h3>\r\n              <img\r\n                className=\"d-inline-block\"\r\n                style={{ width: \"50px\", marginTop: \"-8px\" }}\r\n                src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n                alt=\"Weather Icon\"\r\n              />\r\n            </div>\r\n            <h4 className=\"text-light text-capitalize\">\r\n              {name} , {sys.country}\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-2 p-1 d-flex justify-content-around align-items-start\">\r\n            <i\r\n              className=\"fas fa-tint text-light align-self-center\"\r\n              style={{ fontSize: \"1.5rem\", marginTop: \"-10px\" }}\r\n            />\r\n            <div className=\"d-inline-block\">\r\n              <h3 className=\"text-light\">{main.humidity}%</h3>\r\n              <h4 className=\"text-secondary text-capitalize\">humidity</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 p-1 d-flex justify-content-around align-items-start\">\r\n            <i\r\n              className=\"fas fa-wind text-light align-self-center\"\r\n              style={{ fontSize: \"1.5rem\", marginTop: \"-10px\" }}\r\n            />\r\n            <div className=\"d-inline-block\">\r\n              <h3 className=\"text-light\">{wind.speed} mph</h3>\r\n              <h4 className=\"text-secondary text-capitalize\">wind</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchWeather extends Component {\r\n  state = { cityName: \"\" };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSearchSubmit(this.state.cityName);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Name Of the City\"\r\n            className=\"form-control w-50 mx-auto\"\r\n            value={this.state.cityName}\r\n            onChange={event => this.setState({ cityName: event.target.value })}\r\n            style={{ boxShadow: \"0 0 0 0 #fff\" }}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchWeather;\r\n","import React from \"react\";\r\nimport {\r\n  convertToCelcius,\r\n  convertToFahrenheit\r\n} from \"../convertFunctions/convert\";\r\n\r\nconst HourlyWeatherItem = ({ data, tempCondition }) => {\r\n  const { weather, main, dt } = data;\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ];\r\n\r\n  // converting dt number to current date\r\n\r\n  const date = new Date(dt * 1000);\r\n  const day = days[date.getDay()];\r\n  const hour = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();\r\n  const afterHour = date.getHours() > 11 ? \"PM\" : \"AM\";\r\n\r\n  // convert to desired temperature\r\n  let temp;\r\n  if (tempCondition === \"fahrenheit\") {\r\n    temp = convertToFahrenheit(main.temp);\r\n  } else {\r\n    temp = convertToCelcius(main.temp);\r\n  }\r\n\r\n  return (\r\n    <div className=\"py-2 d-flex\">\r\n      <div className=\"col-5 d-flex\">\r\n        <h5 className=\"text-capitalize col-5 pr-0\">{day}</h5>\r\n        <span\r\n          className=\"col-2 text-center pr-0\"\r\n          style={{ fontSize: \"1.25rem\" }}\r\n        >\r\n          {hour}\r\n        </span>\r\n        <span style={{ fontSize: \"1.25rem\" }}>{afterHour}</span>\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <h5>{`${Math.floor(temp)}°`}</h5>\r\n      </div>\r\n      <div className=\"col-4 d-flex\">\r\n        <h5 className=\"text-left text-capitalize text-secondary col-9\">\r\n          {weather[0].description}\r\n        </h5>\r\n        <img\r\n          style={{ width: \"50px\", marginTop: \"-10px\" }}\r\n          className=\"ml-2\"\r\n          src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n          alt=\"Weather Icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HourlyWeatherItem;\r\n","import React from \"react\";\r\nimport HourlyWeatherItem from \"./HourlyWeatherItem\";\r\n\r\nconst HourlyWeather = ({ weatherItems, tempCondition }) => {\r\n  const items = weatherItems\r\n    .filter((item, idx) => idx % 2 === 0)\r\n    .map(item => (\r\n      <HourlyWeatherItem\r\n        data={item}\r\n        key={item.dt}\r\n        tempCondition={tempCondition}\r\n      />\r\n    ));\r\n  return (\r\n    <div\r\n      className=\"p-4 d-flex justify-content-center\"\r\n      style={{ backgroundColor: \"#bbc4cc\" }}\r\n    >\r\n      <div className=\"col-10\">{items}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HourlyWeather;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Loader from \"./Loader\";\r\nimport CurrentWeather from \"./CurrentWeather\";\r\nimport SearchWeather from \"./SearchWeather\";\r\nimport HourlyWeather from \"./HourlyWeather\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      coords: {\r\n        latitude: null,\r\n        longitude: null\r\n      },\r\n      currentWeatherData: {\r\n        main: { temp: null, humidity: null, temp_min: null, temp_max: null },\r\n        weather: [{ description: null, icon: null }],\r\n        name: null,\r\n        sys: { country: null },\r\n        wind: { speed: null }\r\n      },\r\n      hourlyWeatherList: [],\r\n\r\n      // temperature showed in fahrenheit or celcius on screen\r\n\r\n      showedTemp: \"fahrenheit\"\r\n    };\r\n\r\n    this.key = \"f67f875da7915dc3e498ee1cb2c4f8d3\";\r\n  }\r\n\r\n  // getting coordiantions by geolocation API\r\n\r\n  // componentDidMount() {\r\n  //   if (navigator.geolocation) {\r\n  //     navigator.geolocation.getCurrentPosition(position => {\r\n  //       const { latitude, longitude } = position.coords;\r\n  //       this.setState({\r\n  //         coords: {\r\n  //           latitude,\r\n  //           longitude\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //   } else {\r\n  //     prompt(\"can't retreive your location coordination\");\r\n  //   }\r\n  // }\r\n\r\n  // fetch current weather data from open weather API\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevState.coords.latitude !== this.state.coords.latitude) {\r\n  //     this.fetchCurrentWeather();\r\n  //     this.fetchHourlyforecast();\r\n  //   }\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.onSearchSubmit(\"tehran\");\r\n  }\r\n  \r\n  // fetch current weather data function\r\n\r\n  fetchCurrentWeather = async () => {\r\n    // parameters of the api\r\n\r\n    try {\r\n      const baseUrl = \"https://api.openweathermap.org/data/2.5/weather\";\r\n      const params = `?APPID=${this.key}&lat=${this.state.coords.latitude}&lon=${this.state.coords.longitude}`;\r\n      let response = await axios.get(baseUrl + params);\r\n      this.setState({ currentWeatherData: response.data });\r\n    }\r\n    catch(error) {\r\n      alert(\"oops, if you are loading the page from Iran please turn on your vpn\");\r\n    }\r\n  };\r\n\r\n  // fetch current weather and hourly weather data by using name of the city\r\n\r\n  onSearchSubmit = async cityname => {\r\n    try {\r\n      const weatherUrl = \"https://api.openweathermap.org/data/2.5/weather\";\r\n      const forecastUrl = \"https://api.openweathermap.org/data/2.5/forecast\";\r\n      const params = `?APPID=${this.key}&q=${cityname}`;\r\n      const weather = await axios.get(weatherUrl + params);\r\n      const forecast = await axios.get(forecastUrl + params + \"&cnt=15\");\r\n      this.setState({\r\n        currentWeatherData: weather.data,\r\n        hourlyWeatherList: forecast.data.list\r\n      });\r\n    }\r\n    catch(error) {\r\n      alert(\"oops, if you are loading the page from Iran please turn on your vpn\");\r\n    }\r\n  };\r\n\r\n  // fetch Hourly weather forecast by using coords\r\n\r\n  fetchHourlyforecast = async () => {\r\n    try{\r\n      const baseUrl = \"https://api.openweathermap.org/data/2.5/forecast\";\r\n      const params = `?APPID=${this.key}&lat=${this.state.coords.latitude}&lon=${this.state.coords.longitude}&cnt=15`;\r\n      let response = await axios.get(baseUrl + params);\r\n      this.setState({\r\n        hourlyWeatherList: response.data.list\r\n      });\r\n    }\r\n    catch(error) {\r\n      alert(\"oops, if you are loading the page from Iran please turn on your vpn\");\r\n    }\r\n  };\r\n\r\n  // change showed temp based on CurrentWeather events\r\n\r\n  changeShowedTemp = temp => {\r\n    this.setState({\r\n      showedTemp: temp\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.currentWeatherData.name === null) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <div className=\"mt-3\">\r\n            <SearchWeather onSearchSubmit={this.onSearchSubmit} />\r\n          </div>\r\n          <div className=\"container mt-3 mb-3\">\r\n            <div style={{ backgroundColor: \"rgb(26, 20, 63)\" }}>\r\n              <CurrentWeather\r\n                data={this.state.currentWeatherData}\r\n                changeShowedTemp={this.changeShowedTemp}\r\n              />\r\n            </div>\r\n            <div>\r\n              <HourlyWeather\r\n                weatherItems={this.state.hourlyWeatherList}\r\n                tempCondition={this.state.showedTemp}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./components.js/App\";\r\n\r\nReactDom.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}